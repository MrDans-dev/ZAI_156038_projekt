// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TomatisCRM_API.Models.Entities;

#nullable disable

namespace TomatisCRM_API.Migrations
{
    [DbContext(typeof(TestAppTomatisCrmContext))]
    partial class TestAppTomatisCrmContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("app")
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TomatisCRM_API.Entities.Pliki", b =>
                {
                    b.Property<int>("FileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("File_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FileId"));

                    b.Property<string>("FileFullPath")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("File_FullPath");

                    b.Property<string>("FileGuid")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("File_GUID");

                    b.Property<int?>("FileKntId")
                        .HasColumnType("int")
                        .HasColumnName("File_KntId");

                    b.Property<string>("FileNazwa")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("File_Nazwa");

                    b.Property<string>("FilePath")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("File_Path");

                    b.Property<int?>("FileWizId")
                        .HasColumnType("int")
                        .HasColumnName("File_WizId");

                    b.HasKey("FileId")
                        .HasName("PK__Pliki__0FFFC99601C9FF05");

                    b.HasIndex("FileKntId");

                    b.HasIndex("FileWizId");

                    b.HasIndex(new[] { "FileGuid" }, "UQ__Pliki__12E9E40437197B5A")
                        .IsUnique()
                        .HasFilter("[File_GUID] IS NOT NULL");

                    b.ToTable("Pliki", "app");
                });

            modelBuilder.Entity("TomatisCRM_API.Models.Entities.AppConf", b =>
                {
                    b.Property<int>("SconfId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sconf_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SconfId"));

                    b.Property<string>("SconfNazwa")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("sconf_nazwa")
                        .HasAnnotation("Relational:JsonPropertyName", "SconfNazwa");

                    b.Property<decimal?>("SconfWartoscD")
                        .HasColumnType("decimal(18, 4)")
                        .HasColumnName("sconf_wartoscD")
                        .HasAnnotation("Relational:JsonPropertyName", "SconfWartoscD");

                    b.Property<DateTime?>("SconfWartoscDt")
                        .HasColumnType("datetime")
                        .HasColumnName("sconf_WartoscDt")
                        .HasAnnotation("Relational:JsonPropertyName", "SconfWartoscDt");

                    b.Property<string>("SconfWartoscS")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("sconf_wartoscS")
                        .HasAnnotation("Relational:JsonPropertyName", "SconfWartoscS");

                    b.HasKey("SconfId")
                        .HasName("PK__SysConf__9227CE49AE830300");

                    b.HasIndex(new[] { "SconfNazwa" }, "UQ__SysConf__E92B942231ECCE06")
                        .IsUnique();

                    b.ToTable("AppConf", "app");
                });

            modelBuilder.Entity("TomatisCRM_API.Models.Entities.Klient", b =>
                {
                    b.Property<int>("KntId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("knt_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KntId"));

                    b.Property<string>("KntAkronim")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("knt_akronim")
                        .HasAnnotation("Relational:JsonPropertyName", "KntAkronim");

                    b.Property<DateTime?>("KntDataKontaktu")
                        .HasColumnType("datetime")
                        .HasColumnName("knt_dataKontaktu")
                        .HasAnnotation("Relational:JsonPropertyName", "KntDataKontaktu");

                    b.Property<DateTime?>("KntDataMod")
                        .HasColumnType("datetime")
                        .HasColumnName("knt_dataMod")
                        .HasAnnotation("Relational:JsonPropertyName", "KntDataMod");

                    b.Property<DateTime?>("KntDataUrodzenia")
                        .HasColumnType("datetime2")
                        .HasColumnName("knt_dataUrodzenia")
                        .HasAnnotation("Relational:JsonPropertyName", "KntDataUrodzenia");

                    b.Property<DateTime?>("KntDataUtw")
                        .HasColumnType("datetime")
                        .HasColumnName("knt_dataUtw")
                        .HasAnnotation("Relational:JsonPropertyName", "KntDataUtw");

                    b.Property<bool?>("KntDoKontaktu")
                        .HasColumnType("bit")
                        .HasColumnName("knt_doKontaktu")
                        .HasAnnotation("Relational:JsonPropertyName", "KntDoKontaktu");

                    b.Property<string>("KntEmail")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("knt_email")
                        .HasAnnotation("Relational:JsonPropertyName", "KntEmail");

                    b.Property<string>("KntNazwa")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("knt_nazwa")
                        .HasAnnotation("Relational:JsonPropertyName", "KntNazwa");

                    b.Property<int?>("KntOpeMod")
                        .HasColumnType("int")
                        .HasColumnName("knt_opeMod")
                        .HasAnnotation("Relational:JsonPropertyName", "KntOpeMod");

                    b.Property<int?>("KntOpeUtw")
                        .HasColumnType("int")
                        .HasColumnName("knt_opeUtw")
                        .HasAnnotation("Relational:JsonPropertyName", "KntOpeUtw");

                    b.Property<string>("KntOpis")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("knt_opis")
                        .HasAnnotation("Relational:JsonPropertyName", "KntOpis");

                    b.Property<bool?>("KntStacjonarny")
                        .HasColumnType("bit")
                        .HasColumnName("knt_stacjonarny")
                        .HasAnnotation("Relational:JsonPropertyName", "KntStacjonarny");

                    b.Property<int?>("KntStatusSlw")
                        .HasColumnType("int")
                        .HasColumnName("knt_StatusSlw")
                        .HasAnnotation("Relational:JsonPropertyName", "KntStatusSlw");

                    b.Property<string>("KntTel")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("knt_tel")
                        .HasAnnotation("Relational:JsonPropertyName", "KntTel");

                    b.HasKey("KntId")
                        .HasName("PK__Klient__id");

                    b.HasIndex(new[] { "KntStatusSlw" }, "IX_Klient_knt_StatusSlw");

                    b.HasIndex(new[] { "KntOpeMod" }, "IX_Klient_knt_opeMod");

                    b.HasIndex(new[] { "KntOpeUtw" }, "IX_Klient_knt_opeUtw");

                    b.HasIndex(new[] { "KntAkronim" }, "UQ__Klient__A0B2EA6EFF1B567E")
                        .IsUnique();

                    b.ToTable("Klient", "app");
                });

            modelBuilder.Entity("TomatisCRM_API.Models.Entities.Operatorzy", b =>
                {
                    b.Property<int>("OpeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ope_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OpeId"));

                    b.Property<DateTime?>("OpeDataUtw")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ope_dataUtw")
                        .HasDefaultValueSql("(getdate())")
                        .HasAnnotation("Relational:JsonPropertyName", "OpeDataUtw");

                    b.Property<string>("OpeEmail")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ope_email")
                        .HasAnnotation("Relational:JsonPropertyName", "OpeEmail");

                    b.Property<string>("OpeGoogleapikey")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("ope_googleapikey")
                        .HasAnnotation("Relational:JsonPropertyName", "OpeGoogleapikey");

                    b.Property<string>("OpeHaslo")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("ope_haslo")
                        .HasAnnotation("Relational:JsonPropertyName", "OpeHaslo");

                    b.Property<bool?>("OpeIsAdmin")
                        .HasColumnType("bit")
                        .HasColumnName("ope_IsAdmin")
                        .HasAnnotation("Relational:JsonPropertyName", "OpeIsAdmin");

                    b.Property<string>("OpeLogin")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("ope_login")
                        .HasAnnotation("Relational:JsonPropertyName", "OpeLogin");

                    b.Property<string>("OpeNazwa")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("ope_nazwa")
                        .HasAnnotation("Relational:JsonPropertyName", "OpeNazwa");

                    b.HasKey("OpeId")
                        .HasName("PK__Operator__73A7AA01F34DC888");

                    b.ToTable("Operatorzy", "app");
                });

            modelBuilder.Entity("TomatisCRM_API.Models.Entities.Slowniki", b =>
                {
                    b.Property<int>("SlwId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("slw_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SlwId"));

                    b.Property<string>("OpeNazwa")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "OpeNazwa");

                    b.Property<DateTime?>("SlwDataMod")
                        .HasColumnType("datetime")
                        .HasColumnName("slw_DataMod")
                        .HasAnnotation("Relational:JsonPropertyName", "SlwDataMod");

                    b.Property<DateTime?>("SlwDataUtw")
                        .HasColumnType("datetime")
                        .HasColumnName("slw_DataUtw")
                        .HasAnnotation("Relational:JsonPropertyName", "SlwDataUtw");

                    b.Property<int?>("SlwNextSlw")
                        .HasColumnType("int")
                        .HasColumnName("slw_nextSlw")
                        .HasAnnotation("Relational:JsonPropertyName", "SlwNextSlw");

                    b.Property<int?>("SlwOpeMod")
                        .HasColumnType("int")
                        .HasColumnName("slw_opeMod")
                        .HasAnnotation("Relational:JsonPropertyName", "SlwOpeMod");

                    b.Property<int?>("SlwOpeUtw")
                        .HasColumnType("int")
                        .HasColumnName("slw_opeUtw")
                        .HasAnnotation("Relational:JsonPropertyName", "SlwOpeUtw");

                    b.Property<int?>("SlwTyp")
                        .HasColumnType("int")
                        .HasColumnName("slw_typ")
                        .HasAnnotation("Relational:JsonPropertyName", "SlwTyp");

                    b.Property<decimal?>("SlwWartoscD")
                        .HasColumnType("decimal(18, 4)")
                        .HasColumnName("slw_wartoscD")
                        .HasAnnotation("Relational:JsonPropertyName", "SlwWartoscD");

                    b.Property<string>("SlwWartoscS")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("slw_wartoscS")
                        .HasAnnotation("Relational:JsonPropertyName", "SlwWartoscS");

                    b.HasKey("SlwId")
                        .HasName("PK__Slowniki__37D060C973C4146B");

                    b.HasIndex("SlwOpeUtw");

                    b.HasIndex(new[] { "SlwWartoscS" }, "UQ__Slowniki__534547542580D551")
                        .IsUnique()
                        .HasFilter("[slw_wartoscS] IS NOT NULL");

                    b.ToTable("Slowniki", "app");
                });

            modelBuilder.Entity("TomatisCRM_API.Models.Entities.Wizyty", b =>
                {
                    b.Property<int>("WizId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("wiz_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WizId"));

                    b.Property<DateTime?>("WizDataKoniec")
                        .HasColumnType("datetime")
                        .HasColumnName("wiz_dataKoniec")
                        .HasAnnotation("Relational:JsonPropertyName", "WizDataKoniec");

                    b.Property<DateTime?>("WizDataMod")
                        .HasColumnType("datetime")
                        .HasColumnName("wiz_dataMod")
                        .HasAnnotation("Relational:JsonPropertyName", "WizDataMod");

                    b.Property<DateTime?>("WizDataStart")
                        .HasColumnType("datetime")
                        .HasColumnName("wiz_dataStart")
                        .HasAnnotation("Relational:JsonPropertyName", "WizDataStart");

                    b.Property<DateTime?>("WizDataUtw")
                        .HasColumnType("datetime")
                        .HasColumnName("wiz_dataUtw")
                        .HasAnnotation("Relational:JsonPropertyName", "WizDataUtw");

                    b.Property<bool?>("WizGooglesync")
                        .HasColumnType("bit")
                        .HasColumnName("wiz_googlesync")
                        .HasAnnotation("Relational:JsonPropertyName", "WizGooglesync");

                    b.Property<int?>("WizKntid")
                        .HasColumnType("int")
                        .HasColumnName("wiz_kntid")
                        .HasAnnotation("Relational:JsonPropertyName", "WizKntid");

                    b.Property<int?>("WizOpeMod")
                        .HasColumnType("int")
                        .HasColumnName("wiz_opeMod")
                        .HasAnnotation("Relational:JsonPropertyName", "WizOpeMod");

                    b.Property<int?>("WizOpeUtw")
                        .HasColumnType("int")
                        .HasColumnName("wiz_opeUtw")
                        .HasAnnotation("Relational:JsonPropertyName", "WizOpeUtw");

                    b.Property<string>("WizOpis")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("wiz_opis")
                        .HasAnnotation("Relational:JsonPropertyName", "WizOpis");

                    b.Property<int?>("WizPoprzedniawizId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("wiz_poprzedniawizID")
                        .HasAnnotation("Relational:JsonPropertyName", "WizPoprzedniawizId");

                    b.Property<int?>("WizTyp")
                        .HasColumnType("int")
                        .HasColumnName("wiz_typ")
                        .HasAnnotation("Relational:JsonPropertyName", "WizTyp");

                    b.HasKey("WizId")
                        .HasName("PK__Wizyty__wiz_id");

                    b.HasIndex(new[] { "WizKntid" }, "IX_Wizyty_wiz_kntid");

                    b.HasIndex(new[] { "WizOpeMod" }, "IX_Wizyty_wiz_opeMod");

                    b.HasIndex(new[] { "WizOpeUtw" }, "IX_Wizyty_wiz_opeUtw");

                    b.HasIndex(new[] { "WizTyp" }, "IX_Wizyty_wiz_typ");

                    b.ToTable("Wizyty", "app");
                });

            modelBuilder.Entity("TomatisCRM_API.Models.Entities.Zadanium", b =>
                {
                    b.Property<int>("ZadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("zad_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ZadId"));

                    b.Property<DateTime?>("ZadDataUkonczenia")
                        .HasColumnType("datetime")
                        .HasColumnName("zad_dataUkonczenia")
                        .HasAnnotation("Relational:JsonPropertyName", "ZadDataUkonczenia");

                    b.Property<string>("ZadNazwa")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("zad_nazwa")
                        .HasAnnotation("Relational:JsonPropertyName", "ZadNazwa");

                    b.Property<int?>("ZadOpeid")
                        .HasColumnType("int")
                        .HasColumnName("zad_opeid")
                        .HasAnnotation("Relational:JsonPropertyName", "ZadOpeid");

                    b.Property<string>("ZadOpis")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("zad_opis")
                        .HasAnnotation("Relational:JsonPropertyName", "ZadOpis");

                    b.HasKey("ZadId")
                        .HasName("PK__Zadania__AAB64147E26E387D");

                    b.ToTable("Zadania", "app");
                });

            modelBuilder.Entity("TomatisCRM_API.Entities.Pliki", b =>
                {
                    b.HasOne("TomatisCRM_API.Models.Entities.Klient", "FileKnt")
                        .WithMany("Plikis")
                        .HasForeignKey("FileKntId")
                        .HasConstraintName("FK_Pliki_Knt");

                    b.HasOne("TomatisCRM_API.Models.Entities.Wizyty", "FileWiz")
                        .WithMany("Plikis")
                        .HasForeignKey("FileWizId")
                        .HasConstraintName("FK_Pliki_Wiz");

                    b.Navigation("FileKnt");

                    b.Navigation("FileWiz");
                });

            modelBuilder.Entity("TomatisCRM_API.Models.Entities.Klient", b =>
                {
                    b.HasOne("TomatisCRM_API.Models.Entities.Operatorzy", "KntOpeModNavigation")
                        .WithMany("KlientKntOpeModNavigations")
                        .HasForeignKey("KntOpeMod")
                        .HasConstraintName("FK__Klient__knt_opeM__ope_id");

                    b.HasOne("TomatisCRM_API.Models.Entities.Operatorzy", "KntOpeUtwNavigation")
                        .WithMany("KlientKntOpeUtwNavigations")
                        .HasForeignKey("KntOpeUtw")
                        .HasConstraintName("FK__Klient__knt_opeU__ope_id");

                    b.HasOne("TomatisCRM_API.Models.Entities.Slowniki", "KntStatusSlwNavigation")
                        .WithMany("Klients")
                        .HasForeignKey("KntStatusSlw")
                        .HasConstraintName("FK_Klient_Slowniki");

                    b.Navigation("KntOpeModNavigation");

                    b.Navigation("KntOpeUtwNavigation");

                    b.Navigation("KntStatusSlwNavigation");
                });

            modelBuilder.Entity("TomatisCRM_API.Models.Entities.Slowniki", b =>
                {
                    b.HasOne("TomatisCRM_API.Models.Entities.Operatorzy", "SlwOpeUtwNavigation")
                        .WithMany("Slownikis")
                        .HasForeignKey("SlwOpeUtw")
                        .HasConstraintName("FK__Slowniki__slw_op__47DBAE45");

                    b.Navigation("SlwOpeUtwNavigation");
                });

            modelBuilder.Entity("TomatisCRM_API.Models.Entities.Wizyty", b =>
                {
                    b.HasOne("TomatisCRM_API.Models.Entities.Klient", "WizKnt")
                        .WithMany("Wizyties")
                        .HasForeignKey("WizKntid")
                        .HasConstraintName("FK__Wizyty__wiz_knti__knt_id");

                    b.HasOne("TomatisCRM_API.Models.Entities.Operatorzy", "WizOpeModNavigation")
                        .WithMany("WizytyWizOpeModNavigations")
                        .HasForeignKey("WizOpeMod")
                        .HasConstraintName("FK__Wizyty__wiz_opeM__ope_id");

                    b.HasOne("TomatisCRM_API.Models.Entities.Operatorzy", "WizOpeUtwNavigation")
                        .WithMany("WizytyWizOpeUtwNavigations")
                        .HasForeignKey("WizOpeUtw")
                        .HasConstraintName("FK__Wizyty__wiz_opeU__ope_id");

                    b.HasOne("TomatisCRM_API.Models.Entities.Slowniki", "WizTypNavigation")
                        .WithMany("Wizyties")
                        .HasForeignKey("WizTyp")
                        .HasConstraintName("FK__Wizyty__wiz_typ__slw_id");

                    b.Navigation("WizKnt");

                    b.Navigation("WizOpeModNavigation");

                    b.Navigation("WizOpeUtwNavigation");

                    b.Navigation("WizTypNavigation");
                });

            modelBuilder.Entity("TomatisCRM_API.Models.Entities.Klient", b =>
                {
                    b.Navigation("Plikis");

                    b.Navigation("Wizyties");
                });

            modelBuilder.Entity("TomatisCRM_API.Models.Entities.Operatorzy", b =>
                {
                    b.Navigation("KlientKntOpeModNavigations");

                    b.Navigation("KlientKntOpeUtwNavigations");

                    b.Navigation("Slownikis");

                    b.Navigation("WizytyWizOpeModNavigations");

                    b.Navigation("WizytyWizOpeUtwNavigations");
                });

            modelBuilder.Entity("TomatisCRM_API.Models.Entities.Slowniki", b =>
                {
                    b.Navigation("Klients");

                    b.Navigation("Wizyties");
                });

            modelBuilder.Entity("TomatisCRM_API.Models.Entities.Wizyty", b =>
                {
                    b.Navigation("Plikis");
                });
#pragma warning restore 612, 618
        }
    }
}
